{"version":3,"sources":["core.js","components/dashboard/index.jsx","components/scoreboard/index.jsx","live2.gif","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","window","location","hostname","split","Scoreboard","useState","teamOne","teamTwo","bat","score","wicket","over","setScore","useEffect","axios","get","then","res","console","log","data","style","backgroundColor","height","Box","component","sx","m","width","noValidate","autoComplete","TextField","label","variant","value","onChange","e","prev","target","placeholder","type","Button","onClick","post","Dashboard","socket","io","on","message","close","id","Stack","spacing","direction","Card","minWidth","CardContent","Typography","fontSize","color","gutterBottom","mb","comentry","App","history","useHistory","Navbar","bg","expand","Container","Brand","href","src","logo","Toggle","aria-controls","Collapse","Nav","className","Link","push","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.264d4083.chunk.js","sourcesContent":["\nconst dev = \"http://localhost:5001\"\nexport const baseUrl = window.location.hostname.split(\":\")[0] === \"localhost\" ? dev : \"\";\n\n","import axios from 'axios';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Box from '@mui/material/Box';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\nimport './dash.css';\n\nfunction Scoreboard() {\n    const [score, setScore] = useState({\n        teamOne: \"\",\n        teamTwo: \"\",\n        bat: \"\",\n        score: \"\",\n        wicket: \"\",\n        over: \"\"\n    });\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n\n    const submit = () => {\n        axios.post(`${baseUrl}/api/v1/score`, score)\n            .then((res) => {\n                console.log(\"res: \", res.data);\n            })\n    }\n\n    return (\n\n        <div style={{ backgroundColor:\"#87ceeb\" ,height:\"36rem\"}}>\n<br />\n            <h1> Dashboard Control page </h1>\n\n            <Box\n                component=\"form\"\n                sx={{\n                    '& > :not(style)': { m: 1, width: '25ch' },\n                }}\n                noValidate\n                autoComplete=\"off\"\n            >\n\n                <TextField\n                    label=\"Team 1\"\n                    variant=\"standard\"\n                    value={score.teamOne}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamOne: e.target.value }\n                        })\n                    }}\n                    placeholder=\"enter team one name\"\n                />\n\n                <TextField\n                    label=\"Team 2\"\n                    variant=\"standard\"\n                    value={score.teamTwo}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, teamTwo: e.target.value }\n                        })\n                    }}\n                    placeholder=\"enter team two name\"\n                /> <br />\n                <TextField\n                    label=\"Bating team\"\n                    variant=\"standard\"\n                    value={score.bat}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, bat: e.target.value }\n                        })\n                    }}\n                    placeholder=\"who is batting\"\n                /> <br />\n                <TextField\n                    label=\"runs/score\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.score}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, score: e.target.value }\n                        })\n                    }}\n                    placeholder=\"What's the score\"\n                /> <br />\n                <TextField\n                    label=\"wicket\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.wicket}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, wicket: e.target.value }\n                        })\n                    }}\n                    placeholder=\"how many wickets\"\n                /> <br />\n                <TextField\n                    label=\"over\"\n                    variant=\"standard\"\n                    type=\"number\"\n                    value={score.over}\n                    onChange={(e) => {\n                        setScore((prev) => {\n                            return { ...prev, over: e.target.value }\n                        })\n                    }}\n                    placeholder=\"how many overs\"\n                /> <br />\n                <Button variant=\"contained\" onClick={submit}>Post</Button>\n\n            </Box>\n\n        </div>\n    );\n}\n\nexport default Scoreboard;","import axios from 'axios';\nimport { useState, useEffect } from \"react\"\nimport { baseUrl } from \"./../../core\"\n\nimport Stack from '@mui/material/Stack';\nimport io from 'socket.io-client';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\n\n import './score.css';\n\nfunction Dashboard() {\n\n    const [score, setScore] = useState({})\n\n\n    useEffect(() => {\n        axios.get(`${baseUrl}/api/v1/score`)\n            .then((res) => {\n                console.log(\"res +++: \", res.data);\n                setScore(res.data)\n            })\n    }, [])\n\n    useEffect(() => {\n        const socket = io(\"http://localhost:5001\"); // to connect with locally running Socker.io server\n\n        socket.on('connect', function () {\n            console.log(\"connected to server\")\n        });\n        socket.on('disconnect', function (message) {\n            console.log(\"disconnected from server: \", message);\n        });\n        socket.on('SCORE', function (data) {\n            console.log(data);\n            setScore(data)\n        });\n\n        return () => {\n            socket.close();\n        };\n    }, []);\n\n\n\n\n    return (\n        <div id=\"main\">\n        <div style={{   }}>\n        <br/>\n            <h1 id='nav2'> Score Board </h1>\n\n\n            <Stack spacing={2} direction=\"column\">\n\n                <Card sx={{ minWidth: 275 }}>\n                    <CardContent>\n                        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                            {score?.teamOne} vs. {score?.teamTwo} (bat {score.bat})\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"div\">\n                            {score?.score} / {score?.wicket}\n                        </Typography>\n                        <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                            over: {score.over}\n                        </Typography>\n                        <Typography variant=\"body2\">\n                            comentry: <b> {score?.comentry || \"Hassan Ali just droped the catch\"}</b>\n                        </Typography>\n                    </CardContent>\n                    {/* <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions> */}\n                </Card>\n            </Stack>\n\n\n        </div>\n        </div>\n    );\n}\n\nexport default Dashboard;","export default __webpack_public_path__ + \"static/media/live2.eb769108.gif\";","import './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Button, Navbar, Container, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap';\n\nimport Dashboard from \"./components/dashboard/index\"\nimport Scoreboard from \"./components/scoreboard/index\"\n\nimport logo from './live2.gif';\n\nfunction App() {\n  let history = useHistory();\n\n  return (\n    <>\n      <Navbar  bg=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand id='nav1' href=\"#home\" ><img src={logo} width={100} height={30} />  Live Cricket Update </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link id='nav1' onClick={() => { history.push(\"/\") }}>Scoreboard</Nav.Link>\n              <Nav.Link id='nav1' onClick={() => { history.push(\"/admin\") }}>Dashboard</Nav.Link>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\" component={Scoreboard} />\n        <Route path=\"/admin\" component={Dashboard} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}